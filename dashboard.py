import streamlit as st
import pandas as pd
import plotly.express as px
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# Configura√ß√£o para acessar o Google Sheets usando Streamlit Secrets
SHEET_ID = "1QmdhLGP516CoHxDbORqw2ZV-F2_4UzKjxMfOrJnOFEA"

# Carregar credenciais do Streamlit Secrets
credentials_dict = st.secrets["gcp_service_account"]

# Usar as credenciais do Google diretamente
credentials = ServiceAccountCredentials.from_json_keyfile_dict(
    credentials_dict, 
    ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
)
# Autorizar com o Google
gc = gspread.authorize(credentials)

# Carregar dados do Google Sheets
sh = gc.open_by_key(SHEET_ID)
df_projetos = pd.DataFrame(sh.worksheet("Projetos").get_all_records())
df_hus = pd.DataFrame(sh.worksheet("HUs").get_all_records())

# Sidebar para sele√ß√£o de projeto e HU
st.sidebar.title("üìÅ Projetos e Hist√≥rias de Usu√°rio")
projeto_selecionado = st.sidebar.selectbox("Selecione um projeto", df_projetos["Nome do projeto"].unique())

# Filtrar HUs do projeto selecionado
hus_projeto = df_hus[df_hus["Projeto"] == projeto_selecionado]

if not hus_projeto.empty:
    hu_selecionada = st.sidebar.selectbox("Selecione uma HU", hus_projeto["ID"] + " - " + hus_projeto["Descri√ß√£o"])
    
    # Pegar ID real da HU selecionada
    selected_hu_id = hu_selecionada.split(" - ")[0]
    hu_detalhes = hus_projeto[hus_projeto["ID"] == selected_hu_id].iloc[0]
else:
    st.sidebar.warning("Nenhuma HU dispon√≠vel para este projeto.")
    hu_detalhes = None

# T√≠tulo do Dashboard
st.title("üìä Roadmap de Projetos e HUs")
st.markdown("---")

# üìå Melhorando a exibi√ß√£o das m√©tricas
col1, col2, col3 = st.columns(3)
col1.metric("üìÅ Total de Projetos", len(df_projetos))
col2.metric("‚úÖ Projetos Conclu√≠dos", len(df_projetos[df_projetos["Status"] == "Conclu√≠do"]))
col3.metric("üöÄ Em Andamento", len(df_projetos[df_projetos["Status"] == "Em Andamento"]))
st.markdown("---")

# Vis√£o Geral dos Projetos
st.write("## üöÄ Vis√£o Geral dos Projetos")
fig = px.bar(df_projetos, x="Nome do projeto", y="Progresso", color="Status", title="Progresso dos Projetos", 
             color_discrete_map={"Em Andamento": "#FFCC00", "Conclu√≠do": "#4CAF50"})
st.plotly_chart(fig)

# Exibir detalhes da HU selecionada, se houver
if hu_detalhes is not None:
    st.write(f"## üìã Detalhes da HU {hu_detalhes['ID']}")
    st.write(f"**Descri√ß√£o:** {hu_detalhes['Descri√ß√£o']}")
    st.write(f"**Status:** {hu_detalhes['Status']}")
    st.write(f"**Progresso:** {hu_detalhes['Progresso']}%")
    st.write(f"**Data de In√≠cio:** {hu_detalhes['Data de In√≠cio']}")
    st.write(f"**Previs√£o de Conclus√£o:** {hu_detalhes['Previs√£o de Conclus√£o']}")
    
    # Adicionar barra de progresso
    st.progress(hu_detalhes["Progresso"] / 100)
    st.markdown("---")
